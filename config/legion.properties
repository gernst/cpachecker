#include includes/symbolicExecution.properties

analysis.useLegion = true
# CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.value.ValueAnalysisCPA, cpa.constraints.ConstraintsCPA
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.value.ValueAnalysisCPA, cpa.predicate.PredicateCPA
# Predicate CPA anstelle constraints cpa

cpa.value.unknownValueHandling = RANDOM_VALUE